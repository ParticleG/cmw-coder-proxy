name: Hephaestus Develop CI

on:
  push:
    branches: [ main ]
    tags: [ pre*, v* ]
  pull_request:
    branches: [ main ]

jobs:
  get-info:
    runs-on: ubuntu-latest
    outputs:
      commit-hash: ${{ steps.git-info.outputs.commit-hash }}
    steps:
      - uses: actions/checkout@v4
      - name: Get git info
        id: git-info
        shell: bash
        run: |
          COMMIT_HASH=$(git rev-parse --short ${{ GITHUB.SHA }})
          echo "commit-hash=$COMMIT_HASH" >> $GITHUB_OUTPUT

  build:
    runs-on: windows-latest
    needs: get-info
    env:
      OUTPUT_FOLDER: ./build
      RELEASE_FOLDER: ./release
      VCPKG_DEFAULT_TRIPLET: x86-windows
    strategy:
      matrix:
        config: [ Debug, Release ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
      - name: CMake Configure and Build
        uses: lukka/run-cmake@v10
        with:
          buildPresetAdditionalArgs: '[`--config ${{ matrix.config }}`]'
          workflowPreset: 'ninja-vcpkg'
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cmw-coder-proxy_${{ needs.get-info.outputs.commit-hash }}_${{ GITHUB.RUN_NUMBER }}_${{ matrix.config }}
          path: "${{ env.OUTPUT_FOLDER }}/${{ matrix.config }}"
      - name: Prepare for release
        if: ${{ (startsWith(github.ref, 'refs/tags/pre') || startsWith(github.ref, 'refs/tags/v')) && matrix.config == 'Release'}}
        shell: bash
        run: |
          mkdir -p ${{ env.RELEASE_FOLDER }}
          cp ${{ env.OUTPUT_FOLDER }}/${{ matrix.config }}/msimg32.dll ${{ env.RELEASE_FOLDER }}/loaderdll.dll
          cp ${{ env.OUTPUT_FOLDER }}/${{ matrix.config }}/zlib1.dll ${{ env.RELEASE_FOLDER }}/zlib1.dll
      - name: Upload release
        if: ${{ (startsWith(github.ref, 'refs/tags/pre') || startsWith(github.ref, 'refs/tags/v')) && matrix.config == 'Release'}}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.RELEASE_FOLDER }}/loaderdll.dll
            ${{ env.RELEASE_FOLDER }}/zlib1.dll
          make_latest: ${{ startsWith(github.ref, 'refs/tags/v') }}
          prerelease: ${{ startsWith(github.ref, 'refs/tags/pre') }}
